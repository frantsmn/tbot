import TelegramBot from 'node-telegram-bot-api';
import {ADMIN_KEYBOARD, USER_KEYBOARD} from './app-keyboards';
import type LoggerFactory from './LoggerFactory/LoggerFactory';

export default class AppController {
    constructor(BOT: TelegramBot, ADMIN_ID: number, loggerFactory: LoggerFactory) {
        const logger = loggerFactory.createLogger('AppController');
        const startMessage = `üê∏ –ü—Ä–∏–≤–µ—Ç!

–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:

*–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç*
- –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –ø–æ –Ω–∞—Ü–±–∞–Ω–∫—É –†–ë
- –í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—á–µ—Ç–∞–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–ª—é—Ç—ã –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É: \`100 usd\`; \`500 $\`; \`41 Eur\`; \`20 byn\`; –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–µ —á–∏—Å–ª–æ, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –≤ –¥—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã

*–ë–∞–ª–∞–Ω—Å –ú–¢–°*
- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å—Ç–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤, –º–∏–Ω—É—Ç –∏ —Ç—Ä–∞—Ñ—Ñ–∏–∫–∞
- –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ`;

        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        BOT.onText(/\/start/, async (msg) => {
            if (msg.chat.id === ADMIN_ID) {
                await BOT.sendMessage(msg.chat.id, 'üê∏ –ö–≤–∞, –°–æ–∑–¥–∞—Ç–µ–ª—å!', {
                    parse_mode: 'Markdown',
                    reply_markup: ADMIN_KEYBOARD,
                });
            } else {
                await BOT.sendMessage(
                    msg.chat.id,
                    startMessage,
                    {
                        parse_mode: 'Markdown',
                        reply_markup: USER_KEYBOARD,
                    },
                );
            }
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞: @id Text...
        BOT.onText(/@(\d*)(.*)/, async (msg, match) => {
            const id = match[1];
            const text = match[2];
            await BOT.sendMessage(id, text);
        });

        // –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        BOT.on('message', async (msg) => {
            if (msg.from.id === ADMIN_ID) {
                return;
            }

            logger.info({
                message: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${msg.from.first_name} \`${msg.chat.id}\` –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ`,
                isTg: true,
            });

            await BOT.forwardMessage(ADMIN_ID, msg.from.id, msg.message_id);
        });
    }
}
