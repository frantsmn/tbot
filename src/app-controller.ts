
export default class AppController {
  constructor(BOT) {

    function AdminKeyboard() {

      this.keyboard = {
        keyboard: [
          ["–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç"],
          ["‚ö´ –ö–ª–∏–ø—Å–∞", "‚ö´ –ü–æ–¥—Å–≤–µ—Ç–∫–∞"]
        ],
        resize_keyboard: true,
        one_time_keyboard: false,
        selective: false
      };

      this.setClipLightStatus = (status) => {
        this.keyboard.keyboard[1][0] = status ? "üü° –ö–ª–∏–ø—Å–∞" : "‚ö´ –ö–ª–∏–ø—Å–∞";
      }

      this.setAmbientLightStatus = (status) => {
        this.keyboard.keyboard[1][1] = status ? "üü° –ü–æ–¥—Å–≤–µ—Ç–∫–∞" : "‚ö´ –ü–æ–¥—Å–≤–µ—Ç–∫–∞";
      }

    }

    const ADMIN_KEYBOARD = new AdminKeyboard();

    const USER_KEYBOARD = {
      keyboard: [["–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", "–ë–∞–ª–∞–Ω—Å MTS"]],
      resize_keyboard: true,
      one_time_keyboard: false,
      selective: false
    }

    /**
     * –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
     */
    BOT.onText(/\/start/, msg => {
      switch (msg.chat.id) {
        case ADMIN_ID:
          BOT.sendMessage(msg.chat.id, `üê∏ –ö–≤–∞, –°–æ–∑–¥–∞—Ç–µ–ª—å!`, {
            parse_mode: "Markdown",
            reply_markup: JSON.stringify(ADMIN_KEYBOARD.keyboard)
          });
          break;

        default:
          BOT.sendMessage(
            msg.chat.id,
            `üê∏ –ü—Ä–∏–≤–µ—Ç, ${msg.chat.first_name}!
              
      –í–æ—Ç –º–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
      
      *–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç*
      - –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –ø–æ –Ω–∞—Ü–±–∞–Ω–∫—É –†–ë
      - –í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—á–µ—Ç–∞–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–ª—é—Ç—ã –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É: \`100 usd\`; \`500$\`; \`41 Eur\`; \`20byn\`; –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–µ —á–∏—Å–ª–æ, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –≤ –¥—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã
      
      *–ë–∞–ª–∞–Ω—Å –ú–¢–°*
      - –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å—Ç–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤, –º–∏–Ω—É—Ç –∏ —Ç—Ä–∞—Ñ—Ñ–∏–∫–∞
      - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
      
      *–ë–∞–ª–∞–Ω—Å Beltelecom*
      - –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å—Ç–∞—Ç–∫–∞
      - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ`,
            {
              parse_mode: "Markdown",
              reply_markup: JSON.stringify(USER_KEYBOARD)
            }
          );
          break;
      }
    });


    /**
     * –û–±—â–∏–µ –æ—Ç–≤–µ—Ç—ã
     */
    BOT.onText(/–ø–∞—Å–∏–±|—Å–ø—Å|–±–ª–∞–≥–æ–¥–∞—Ä|cgc|cgfcb/gi, async msg =>
      BOT.sendMessage(msg.chat.id, Math.random() > 0.5 ? "üê∏‚ù§Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞!" : "üê∏‚ù§Ô∏è –†–∞–¥–∞ —Å—Ç–∞—Ä–∞—Ç—å—Å—è!"));

    BOT.onText(/–ø—Ä–∏–≤|ghbd|hello|hi/gi, async msg =>
      BOT.sendMessage(msg.chat.id, Math.random() > 0.5 ? `üê∏‚úã –ü—Ä–∏–≤–µ—Ç, ${msg.chat.first_name}!` : "üê∏ –ê–∞–∞... –ö—Ç–æ –∑–¥–µ—Å—å?!"));


    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞: @id Text...
     */
    BOT.onText(/@([0-9]*)(.*)/, function (msg, match) {
      let id = match[1];
      let text = match[2];
      BOT.sendMessage(id, text);
    });


    /**
     * –¢—Ä–µ–∫–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     */
    const setUser = require("./firestore").setUser;
    const getUserByUserId = require("./firestore").getUserByUserId;

    BOT.on("message", async msg => {
      if (msg.from.id !== ADMIN_ID) {

        //1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let user = await getUserByUserId(msg.from.id);
        if (user && user.hasOwnProperty("is_bot")) {
          // logger.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –±–∞–∑—ã: ${JSON.stringify(user)}`);
        } else {
          setUser(msg.from);
          logger.info(`‚ùó‚ùó –í –±–∞–∑—É –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n\n${JSON.stringify(msg.from.first_name)}`);
          BOT.sendMessage(ADMIN_ID, `‚ùó‚ùó –í –±–∞–∑—É –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n\n${JSON.stringify(msg.from.first_name)}`);
        }

        //2. –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        logger.info(`‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${msg.from.first_name} ${msg.chat.id} –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: ${JSON.stringify(msg)}`);
        BOT.forwardMessage(ADMIN_ID, msg.from.id, msg.message_id);
      }
    });

  }
}
