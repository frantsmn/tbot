export default function mtsController(BOT, MTS_FIREBASE, mtsScraper, logger) {
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º
     * @param userAccounts - –º–∞—Å—Å–∏–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
     * @param id - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async function sendBalanceMessages(userAccounts, id) {
        const messagePromises = userAccounts.map((account) => {
            const {text, options} = mtsScraper.createMessage(account);

            return BOT.sendMessage(id, text, options);
        });

        await Promise.all(messagePromises);
    }

    BOT.onText(/mts/gi, async (msg) => {
        try {
            const userAccounts = await MTS_FIREBASE.getMtsAccountsByUserId(msg.from.id);

            if (!userAccounts.length) {
                await BOT.sendMessage(msg.from.id, 'üê∏ –Ø –Ω–µ –∑–Ω–∞—é –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç –∫–∞–±–∏–Ω–µ—Ç–∞ MTS');

                return;
            }

            await sendBalanceMessages(userAccounts, msg.from.id);

            logger.info({
                message: '–°–æ–æ–±—â–µ–Ω–∏—è —Å –±–∞–ª–∞–Ω—Å–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã',
                isTg: true,
            });
        } catch (error) {
            await BOT.sendMessage(msg.from.id, 'üê∏ –£–ø—Å... –Ø —Å–ª–æ–º–∞–ª–∞—Å—å!');

            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n${error}`);
        }
    });

    BOT.on('callback_query', async (response) => {
        if (JSON.parse(response.data).query_id !== 'mts') {
            return;
        }

        BOT.answerCallbackQuery(response.id, {
            text: '–û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥',
            cache_time: 120,
            show_alert: true,
        });

        try {
            const userAccounts = await MTS_FIREBASE
                .getMtsAccountsByUserId(response.message.chat.id);

            await mtsScraper.updateAccounts(userAccounts);
            await sendBalanceMessages(userAccounts, response.message.chat.id);
            await MTS_FIREBASE.setMtsAccounts(userAccounts);

            logger.info({
                message: '–°–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã',
                isTg: true,
            });
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n${error}`);
        }
    });
}
