import schedule from 'node-schedule'
import UserDeviceScan from './user-device-scan'
import Logger from '@modules/logger/logger'
import TuyaDevice from './tuya-device'
const logger = new Logger('iot-scheduler')

export default class IoTScheduler {
    constructor(USER_DEVICES, tyuaDevices: { clipLight: TuyaDevice, ambientLight: TuyaDevice }) {
        const nokiaSevenPlus = USER_DEVICES[0];
        const { clipLight, ambientLight } = tyuaDevices;

        schedule.scheduleJob('*/1 * * * *', lightOnByUserDevice);
        schedule.scheduleJob({ hour: 1, minute: 0 }, lightOffBySchedule);

        function lightOnByUserDevice() {
            const now = new Date().getHours();

            UserDeviceScan
                .scanDevice(nokiaSevenPlus)
                .then(isDeviceAvailable => {
                    // –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞–π–¥–µ–Ω
                    if (isDeviceAvailable) {
                        /* –û—Ç 19:00 –¥–æ 21:59 –∏ –µ—Å–ª–∏ —Å–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω */
                        if (now >= 18 && now <= 21 && ambientLight.status === false) {
                            // –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç
                            ambientLight.turnOn();
                            logger.log({
                                value: `‚åõ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ¬´${ambientLight.name}¬ª üü° –≤–∫–ª—é—á–µ–Ω–æ –ø–æ –Ω–∞–ª–∏—á–∏—é —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ—Ç 18:00 –¥–æ 21:59)`,
                                type: 'info'
                            });
                        }
                    }
                })
                .catch(error =>
                    logger.log({
                        value: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ lightOnByUserDevice. ${error}`,
                        type: 'error'
                    }));
        }

        function lightOffBySchedule() {
            clipLight.turnOff();
            ambientLight.turnOff();
            logger.log({
                value: `‚åõ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ¬´${ambientLight.name}¬ª ‚ö´ –∏ ¬´${clipLight.name}¬ª –≤—ã–∫–ª—é—á–µ–Ω—ã –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (01:00)`,
                type: 'info'
            });
        }

    }
}